server:
  port: 9527
spring:
  application:
    name: cloud-gateway
  cloud:
    gateway:
      gateway:
        discovery:
          locator:
            enabled: true  #开启从注册中心动态创建路由的功能，利用微服务名进行路由
      routes:
        - id: payment_routh #路由的ID，没有固定规则但要求唯一，建议配合服务名
          #uri: http://localhost:8001   #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/payment/get/**   #断言,路径相匹配的进行路由

        - id: payment_routh2
          #uri: http://localhost:8001
          uri: lb://cloud-payment-service
          #说白了，Predicate就是为了实现一组匹配规则，让请求过来找到对应的Route进行处理
          predicates:
            - Path=/payment/lb/**   #断言,路径相匹配的进行路由
            #- After=2020-06-07T17:39:45.975+08:00[Asia/Shanghai] #在某个时间段之后进行路由
            #- Before=2020-06-07T17:39:45.975+08:00[Asia/Shanghai] #在某个时间段之前进行路由
            #- Between=2020-03-08T10:59:34.102+08:00[Asia/Shanghai],2020-03-08T10:59:34.102+08:00[Asia/Shanghai] #在某个时间区间内进行路由
            #- Cookie=username,zzyy    #并且Cookie是username=zhangshuai才能访问 通过curl http://localhost:9527/payment/lb --cookie "username=zzyy"访问
            #- Header=X-Request-Id, \d+   #请求头中要有X-Request-Id属性并且值为整数的正则表达式 通过curl http://localhost:9527/payment/lb -H "X-Request-Id:123"访问
            #- Host=**.atguigu.com
            #- Method=GET
            #- Query=username, \d+ #要有参数名称并且是正整数才能路由
eureka:
  instance:
    hostname: cloud-gateway-service
  client: #服务提供者provider注册金eureka服务列表内
    service-url:
      register-with-eureka: true
      fetch-registry: true
      defaultZone: http://eureka7001.com:7001/eureka


